function [U,V] = GS(U,V,F,G)
% GS 对子问题的共轭梯度法用Vcycle预优 所用的磨光子
% 输入初值 U,V, 常数项 F,G
% 输出迭代一次后的 U,V
[N,~] = size(U);
if N~=2
    U(1,1) = ( F(1,1) + N^2*U(1,2) + N^2*U(2,1) )/(3*N^2);
    for j = 2:N-2
        U(1,j) = ( F(1,j) + N^2*U(1,j+1) + N^2*U(2,j) + N^2*U(1,j-1) )/(3*N^2);
    end
    U(1,N-1) = ( F(1,N-1) + N^2 * U(1,N-2) + N^2*U(2,N-1) )/(3*N^2);
    for i = 2:N-1
        U(i,1) = ( F(i,1) + N^2*U(i,2) + N^2*U(i+1,1) + N^2*U(i-1,1) )/(4*N^2);
        for j=2:N-2
            U(i,j) = ( F(i,j) + N^2*U(i,j+1) + N^2*U(i,j-1) + N^2*U(i+1,j) + N^2*U(i-1,j) )/(4*N^2);
        end
        U(i,N-1) = ( F(i,N-1) + N^2*U(i,N-2) + N^2*U(i+1,N-1) + N^2*U(i-1,N-1) )/(4*N^2);
    end
    U(N,1) = ( F(N,1) + N^2*U(N,2) + N^2*U(N-1,1) )/(3*N^2);
    for j = 2:N-2
        U(N,j) = ( F(N,j) + N^2*U(N,j+1) + N^2*U(N-1,j) + N^2*U(N,j-1) )/(3*N^2);
    end
    U(N,N-1) = ( F(N,N-1) + N^2 * U(N,N-2) + N^2*U(N-1,N-1) )/(3*N^2);
    %
    V(1,1) = ( G(1,1) + N^2*V(2,1) + N^2*V(1,2) )/(3*N^2);
    for j=2:N-1
        V(1,j) = ( G(1,j) + N^2*V(2,j) + N^2*V(1,j+1) + N^2*V(1,j-1) )/(4*N^2);
    end
    V(1,N) = ( G(1,N) + N^2*V(2,N) + N^2*V(1,N-1) )/(3*N^2);
    for i=2:N-2
        V(i,1) = ( G(i,1) + N^2*V(i+1,1) + N^2*V(i,2) + N^2*V(i-1,1) )/(3*N^2);
        for j=2:N-1
            V(i,j) = ( G(i,j) + N^2*V(i+1,j) + N^2*V(i,j+1) + N^2*V(i-1,j) + N^2*V(i,j-1) )/(4*N^2);
        end
        V(i,N) = ( G(i,N) + N^2*V(i+1,N) + N^2*V(i,N-1) + N^2*V(i-1,N) )/(3*N^2);
    end
    V(N-1,1) = ( G(N-1,1) + N^2*V(N-1,2) + N^2*V(N-2,1) )/(3*N^2);
    for j=2:N-1
        V(N-1,j) = ( G(N-1,j) + N^2*V(N-2,j) + N^2*V(N-1,j+1) + N^2*V(N-1,j-1) )/(4*N^2);
    end
    V(N-1,N) = ( G(N-1,N) + N^2*V(N-2,N) + N^2*V(N-1,N-1) )/(3*N^2);

elseif N==2
    U(1,1) = ( F(1,1) + N^2*U(2,1) )/(3*N^2);
    U(2,1) = ( F(2,1) + N^2*U(1,1) )/(3*N^2);
    V(1,1) = ( G(1,1) + N^2*V(1,2) )/(3*N^2);
    V(1,2) = ( G(1,2) + N^2*V(1,1) )/(3*N^2);
end

